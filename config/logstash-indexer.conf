input {
 udp {
    port => 9000
    type => syslog
       }
 }
filter {
  if [type] == "syslog" {
    if ([message] =~ /success/) {
		if ([message] =~ /New Logon/) {
            grok {
			match => { "message" => "%{SYSLOGBASE} Alert Level: %{NONNEGINT:Alert_Level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: %{DATA:Location}; classification: %{DATA:classification}; user: %{DATA:User}; WinEvtLog: Security: %{DATA:Audit}: Microsoft-Windows-Security-Auditing: %{DATA:User}: %{DATA:Domain}: %{DATA:Domain_Control}: %{DATA:Info}:  Security ID: %{DATA:Info} Account Name: %{DATA:User}  Account Domain:  %{DATA:Domain}  Logon ID:  %{DATA:LoginData}  Logon Type:   %{DATA:LoginData}  New Logon:  Security ID:  %{DATA:LoginData}  Account Name:  %{DATA:User}  Account Domain:  %{DATA:Domain}  Logon ID:  %{DATA:LoginData}  Logon GUID:  %{DATA:LoginData}  Process Information:  Process ID:  %{DATA:LoginData}  Process Name:  %{DATA:Info}  Network Information:  Workstation Name: %{DATA:Info} Source Network Address: %{DATA:Src_IP}  Source Port:  %{DATA:Src_Port} %{GREEDYDATA:syslog_message}" }
			}
		}
		else {
		    grok {
			match => { "message" => "%{SYSLOGBASE} Alert Level: %{NONNEGINT:Alert_Level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: %{DATA:Location}; classification: %{DATA:classification}; user: %{DATA:User}; WinEvtLog: Security: %{DATA:Audit}: Microsoft-Windows-Security-Auditing: %{DATA:User}: %{DATA:Domain}: %{DATA:Domain_Control}: %{DATA:Info}:  Account Name:  %{DATA:User}  Account Domain:  %{DATA:Domain}  Logon GUID:  %{DATA:LoginData}  Service Information:  Service Name:  %{DATA:Info}  Service ID:  %{DATA:Info}  Network Information:  Client Address:  ::ffff:%{DATA:Src_IP}  Client Port:  %{DATA:Src_Port}  %{GREEDYDATA:syslog_message}" }
			 }
		
		}
		
    }
    else if ([message] =~ /Logoff/) {
            grok {
			match => { "message" => "%{SYSLOGBASE} Alert Level: %{NONNEGINT:Alert_Level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: %{DATA:Location}; classification: %{DATA:classification}; user: %{DATA:User}; WinEvtLog: Security: %{DATA:Audit}: Microsoft-Windows-Security-Auditing: %{DATA:User}: %{DATA:Domain}: %{DATA:Domain_Control}: %{DATA:Info}:  Security ID: %{DATA:Info} Account Name:  %{DATA:User}  Account Domain:  %{DATA:Domain}  Logon ID: %{GREEDYDATA:syslog_message}" }
			}

    }
	
	else if ([message] =~ /group_changed/) {
            grok {
			match => { "message" => "%{SYSLOGBASE} Alert Level: %{NONNEGINT:Alert_Level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: %{DATA:Location}; classification: %{DATA:classification}; WinEvtLog: Security: %{DATA:Audit}: Microsoft-Windows-Security-Auditing: %{DATA:User}: %{DATA:Domain}: %{DATA:Domain_Control}: %{DATA:Info}:  Security ID:  %{DATA:Info}  Account Name:  %{DATA:AdminUser}  Account Domain:  %{DATA:Domain}  Logon ID:  %{DATA:LoginData}  Member:  Security ID:  %{DATA:Info}  Account Name:  %{DATA:Info}  Group:  Security ID:  %{DATA:Info}  Group Name:  %{DATA:GrpNme}  Group Domain:  %{DATA:Domain}  %{GREEDYDATA:syslog_message}" }
			}

    }
	

    else {
			grok {
			match => { "message" => "(?m)%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} %{DATA:syslog_program}: Alert Level: %{NONNEGINT:Alert_Level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: %{DATA:Location}; classification: %{DATA:classification}; ((srcip: %{IP:Src_IP})?; (user: %{USER:User};%{SPACE})?(Source Network Address: %{IP:Src_IP}%{SPACE})?(srcip: %{IP:Src_IP};%{SPACE})?(user: %{USER:User};%{SPACE})?(dstip: %{IP:Dst_IP};%{SPACE})?(src_port: %{NONNEGINT:Src_Port};%{SPACE})?(dst_port: %{NONNEGINT:Dst_Port};%{SPACE})?%{GREEDYDATA:Details})?" }
			add_field => [ "ossec_server", "%{host}" ]
			}

	}
}

}

output {
    elasticsearch { hosts => ["localhost:9200"] }
    # stdout { codec => rubydebug }
}
